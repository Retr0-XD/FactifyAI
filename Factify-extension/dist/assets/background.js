const l="https://factifyai.onrender.com",h={textAnalysis:`${l}/analyze/text`,imageAnalysis:`${l}/analyze/image`,healthCheck:`${l}/analyze/health`};function e(...t){console.log("[FactifyAI Background]",...t)}chrome.runtime.onMessage.addListener((t,c,n)=>{if(e("Received message:",t),t.action==="analyzeText")return e("Analyzing text:",t.data.text.substring(0,50)+"..."),y(t.data).then(a=>{e("Analysis successful, sending response"),n({success:!0,data:a})}).catch(a=>{e("Analysis failed:",a.message),n({success:!1,error:a.message})}),!0;if(t.action==="analyzeImage")return e("Analyzing image"),d(t.data).then(a=>{e("Image analysis successful"),n({success:!0,data:a})}).catch(a=>{e("Image analysis failed:",a.message),n({success:!1,error:a.message})}),!0;if(t.action==="checkHealth")return e("Checking backend health"),g().then(a=>{e("Health check result:",a),n({success:!0,data:a})}).catch(a=>{e("Health check failed:",a.message),n({success:!1,error:a.message})}),!0});async function y(t){const{text:c,enableOptions:n,apikey:a,model:i}=t;e("Sending request to",h.textAnalysis),e("Request payload:",{text:c.substring(0,50)+"...",enableOptions:n,model:i});try{const s=await fetch(h.textAnalysis,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({text:c,enableOptions:n,apikey:a,model:i})});if(e("Response status:",s.status),!s.ok){const o=await s.text();throw e("Error response:",o),new Error(`API request failed with status ${s.status}: ${o}`)}const r=await s.text();return e("Response data:",r.substring(0,100)+"..."),r}catch(s){throw e("Fetch error:",s),s}}async function d(t){const{imageData:c,apikey:n,model:a,text:i}=t;e("Sending image analysis request");try{const s=new FormData;s.append("file",c),s.append("apikey",n),s.append("model",a),s.append("text",i);const r=await fetch(h.imageAnalysis,{method:"POST",body:s});if(e("Image analysis response status:",r.status),!r.ok){const u=await r.text();throw e("Error response:",u),new Error(`API request failed with status ${r.status}: ${u}`)}const o=await r.text();return e("Response data:",o.substring(0,100)+"..."),o}catch(s){throw e("Fetch error:",s),s}}async function g(){e("Sending health check request");try{const t=await fetch(h.healthCheck,{method:"GET"});return e("Health check response status:",t.status),t.ok}catch(t){throw e("Health check error:",t),t}}e("FactifyAI background script loaded");
